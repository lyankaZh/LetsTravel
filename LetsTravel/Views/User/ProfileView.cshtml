@model LetsTravel.Models.ProfileModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<link href="~/Styles/profileStyles.css" rel="stylesheet" />
<link href="~/Styles/bootstrap.css" rel="stylesheet" />
<link href="~/Styles/ValidationStyles.css" rel="stylesheet" />
<html>
<head>
    <title>Profile</title>
</head>

<body>
    <div class="row">


        <div class="section-vcardbody section-home container-fluid" id="section-home">
            @if (TempData["deleteGuideErrorMessage"] != null)
            {
                <div class="alert alert-danger">@TempData["deleteGuideErrorMessage"]</div>
            }
            @if (TempData["deleteTravellerErrorMessage"] != null)
            {
                <div class="alert alert-danger">@TempData["deleteTravellerErrorMessage"]</div>
            }
            <div class="vcard-profile-pic">
                
                @if (Model.ImageData != null)
                {
                    <img src="@Url.Action("GetImage", "User", new {id = Model.Id})" />
                }
                else
                {
                    <img src="~/Images/defaultImage.png"/>
                }
            </div>

            <div class="vcard-profile-description">
                @Html.HiddenFor(x => Model.Id)
                <h1 class="profile-title">@Model.UserName </h1>
                <div class="vcard-profile-description-text" id="font-style">
                    <p>First Name: @Model.FirstName</p>
                    <p>Last Name: @Model.LastName</p>
                    <p>Email: @Model.Email</p>
                    @if (User.IsInRole("Guide"))
                    {
                        <p>Amount of excursions: @Model.OwnedExcursionsAmount</p>
                    }
                    @if (User.IsInRole("Traveller"))
                    {
                        <p>Amount of subscribed excursions: @Model.SubscribedExcursionsAmount</p>
                    }
                    @if (!string.IsNullOrEmpty(Model.AboutMyself))
                    {
                        <p>About: @Model.AboutMyself</p>
                    }
                    @if (Model.Mark != 0)
                    {
                        <p>Average Mark: @Model.Mark</p>
                    }
                </div>

            </div>

            
            <div  id ="normal-button">
                @Html.ActionLink("Edit Profile", "Edit", "User", null, new { @class = "btn btn-success" })

                @using (Html.BeginForm("Delete", "User"))
                {
                    @Html.HiddenFor(x => Model.Id)
                    <input type="submit"
                           class="btn btn-danger"
                           onclick="return confirm('Are you sure you wish to delete your profile?');"
                           value="Delete" />
                }
            </div>
               
            

        </div>
    </div>

</body>
</html>